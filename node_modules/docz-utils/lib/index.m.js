import{parse}from"@babel/parser";import traverse from"@babel/traverse";import vfile from"to-vfile";import unified from"unified";import remark from"remark-parse";import matter from"remark-frontmatter";import slug from"remark-slug";import parseFrontmatter from"remark-parse-yaml";import find from"unist-util-find";import is from"unist-util-is";import visit from"unist-util-visit";import humanize from"humanize-string";import flatten from"lodash.flatten";import get from"lodash.get";import{getPropValue,getProp}from"jsx-ast-utils";import strip from"strip-indent";import generator__default from"@babel/generator";import{extname,join}from"path";import{assembleFiles}from"codesandboxer-fs";import{format}from"prettier";import logger from"signale";const valueFromTraverse=(e,r=(e=>e))=>t=>{let o="";const a=parse(t,{plugins:["jsx"]});return traverse(a,{enter(t){if(e(t))return o=r(t),void t.stop()}}),o},codeFromNode=e=>r=>valueFromTraverse(e,e=>r.slice(e.node.start,e.node.end))(r);var ast=Object.freeze({valueFromTraverse:valueFromTraverse,codeFromNode:codeFromNode});const parseMdx=e=>{const r=vfile.readSync(e,"utf-8"),t=unified().use(remark,{type:"yaml",marker:"-"}).use(matter).use(parseFrontmatter).use(slug);return t.run(t.parse(r))},getChildValue=e=>e.map(e=>e.children?getChildValue(e.children):e.value),valueFromHeading=e=>{const r=get(e,"children"),t=get(e,"data.id");return Array.isArray(r)?flatten(getChildValue(r)).filter(Boolean).join(" "):humanize(t)},headingsFromAst=e=>{const r=[];return visit(e,"heading",e=>{const t=get(e,"data.id"),o=get(e,"depth");r.push({depth:o,slug:t,value:valueFromHeading(e)})}),r},getParsedData=e=>{const r=find(e,e=>is("yaml",e));return get(r,"data.parsedValue")||{}};var mdast=Object.freeze({parseMdx:parseMdx,headingsFromAst:headingsFromAst,getParsedData:getParsedData});const propFromElement=e=>valueFromTraverse(e=>e.isJSXOpeningElement(),r=>getPropValue(getProp(r.node.attributes,e))),removeTags=e=>{const r=codeFromNode(e=>e.isJSXOpeningElement()),t=codeFromNode(e=>e.isJSXClosingElement());return e.replace(r(e),"").replace(t(e),"")},sanitizeCode=e=>{const r=strip(e).trim(),t=r.startsWith("{")&&r.endsWith("}")?r.substr(1,r.length-2):r;return strip(t).trim().replace(/'/g,"\\'").replace(/`/g,"\\`")},componentName=e=>{const r=e.match(/^\<\\?(\w+)/);return r&&r[1]};var jsx=Object.freeze({propFromElement:propFromElement,removeTags:removeTags,sanitizeCode:sanitizeCode,componentName:componentName});const fromSpecifiers=(e=[])=>Array.isArray(e)&&e.length>0?e.map(e=>get(e,"local.name")):[],traverseOnImports=e=>r=>{try{const t=parse(r.value,{sourceType:"module"});let o=[];return traverse(t,{enter(r){r.isImportDeclaration()&&"docz"!==get(r,"node.source.value")&&(o=o.concat(e(r)))}}),o}catch(e){return[]}},getFullImports=traverseOnImports(e=>[get(generator__default(e.node),"code")]),getImportsVariables=traverseOnImports(e=>fromSpecifiers(e.node.specifiers));var imports=Object.freeze({getFullImports:getFullImports,getImportsVariables:getImportsVariables});const wrapCode=e=>`import React from 'react';\n\nconst doczStyles = {\n  margin: '0 3px',\n  padding: '4px 6px',\n  fontFamily: '"Source Code Pro", monospace',\n  fontSize: 14,\n};\n\nconst App = ({ children }) => (\n  <div style={doczStyles}>\n    {children && typeof children === 'function' ? children() : children}\n  </div>\n)\n\nexport default () => (\n  <App>\n    ${e.split("\n").join("\n    ")}\n  </App>\n)`;function getSandboxFiles(e,r,t){const o=[...r,wrapCode(e)].join("\n"),a=join(t,"codesandbox.example.csb.js");return assembleFiles(a,{extensions:[".js",".ts",".jsx",".tsx"],contents:o})}const getSandboxImportInfo=async(e,r,t)=>{let o;try{const{parameters:a}=await getSandboxFiles(e,r,t);o=a}catch(e){console.error("Could not create Open in CodeSandbox",e)}return o};var codesandbox=Object.freeze({getSandboxImportInfo:getSandboxImportInfo});const format$1=e=>new Promise((r,t)=>{try{r(format(e,{parser:"babylon",semi:!1,singleQuote:!0,trailingComma:"all"}))}catch(e){logger.fatal(e),r(e)}});function namedAssetImport({types:e}){const r=new WeakSet;return{visitor:{ImportDeclaration(t,{opts:{loaderMap:o}}){const a=t.node.source.value,n=extname(a).substr(1);r.has(t.node)||-1!==a.indexOf("!")||o[n]&&t.replaceWithMultiple(t.node.specifiers.map(t=>{if(e.isImportDefaultSpecifier(t)){const o=e.importDeclaration([e.importDefaultSpecifier(e.identifier(t.local.name))],e.stringLiteral(a));return r.add(o),o}const s=e.importDeclaration([e.importSpecifier(e.identifier(t.local.name),e.identifier(t.imported.name))],e.stringLiteral(o[n][t.imported.name]?o[n][t.imported.name].replace(/\[path\]/,a):a));return r.add(s),s}))}}}}export{ast,mdast,format$1 as format,imports,jsx,codesandbox,namedAssetImport};
