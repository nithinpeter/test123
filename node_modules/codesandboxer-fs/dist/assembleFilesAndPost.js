'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

/*::
import type { Config } from './flow-types'
*/

var assembleFilesAndPost = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(filePath /*: string */
  , config /*: Config */
  ) {
    var _ref2, parameters, csbInfo;

    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return assembleFiles(filePath, config);

          case 2:
            _ref2 = _context.sent;
            parameters = _ref2.parameters;
            _context.next = 6;
            return sendFilesToCSB(parameters);

          case 6:
            csbInfo = _context.sent;
            return _context.abrupt('return', csbInfo);

          case 8:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function assembleFilesAndPost(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _require = require('codesandboxer'),
    sendFilesToCSB = _require.sendFilesToCSB;

var assembleFiles = require('./assembleFiles');

module.exports = assembleFilesAndPost;