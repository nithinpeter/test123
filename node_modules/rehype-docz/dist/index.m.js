import{relative,dirname}from"path";import is from"unist-util-is";import flatten from"lodash.flatten";import nodeToString from"hast-util-to-string";import{jsx,imports}from"docz-utils";import{format}from"docz-utils/lib/format";import{getSandboxImportInfo}from"docz-utils/lib/codesandbox";const isPlayground=o=>"Playground"===o,addPropsOnPlayground=async(o,t,r,a,i,e)=>{const n=jsx.componentName(o.value),s=RegExp(`^\\<${n}`);if(isPlayground(n)){const l=(await format(nodeToString(o))).slice(1,1/0),m=`{props,${r.join(",")}}`,d=jsx.sanitizeCode(jsx.removeTags(l));if(o.value=o.value.replace(s,`<${n} __position={${t}} __code={\`${d}\`} __scope={${m}}`),e){const t=await getSandboxImportInfo(d,a,i);o.value=o.value.replace(s,`<${n} __codesandbox={\`${t}\`}`)}}},addComponentsProps=(o,t,r,a)=>async(i,e)=>{await addPropsOnPlayground(i,e,o,t,r,a)};var index=(o,t)=>()=>(r,a)=>{const i=r.children.filter(o=>is("import",o)),e=flatten(i.map(imports.getFullImports)),n=flatten(i.map(imports.getImportsVariables)),s=relative(o,dirname(a.history[0])),l=r.children.filter(o=>is("jsx",o)).map(addComponentsProps(n,e,s,t));return Promise.all(l).then(()=>r)};export default index;
