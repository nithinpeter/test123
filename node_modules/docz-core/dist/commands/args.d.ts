import { Plugin } from '../Plugin';
import { BabelRC } from '../utils/babel-config';
export declare type Env = 'production' | 'development';
export declare type ThemeConfig = Record<string, any>;
export interface Menu {
    name: string;
    route?: string;
    href?: string;
    menu?: Menu[];
}
export interface HtmlContext {
    lang: string;
    favicon?: string;
    head?: {
        meta: any[];
        links: any[];
        raw: string;
        scripts: any[];
    };
    body?: {
        raw: string;
        scripts: any[];
    };
}
export interface Argv {
    base: string;
    src: string;
    files: string;
    ignore: string[];
    dest: string;
    editBranch: string;
    config: string;
    debug: boolean;
    typescript: boolean;
    propsParser: boolean;
    host: string;
    port: number;
    websocketPort: number;
    websocketHost: string;
    hotPort: number;
    hotHost: string;
    native: boolean;
    codeSandbox: boolean;
    title: string;
    description: string;
    theme: string;
    /**
     * @deprecated since the new ordering using menu on config file
     * this property will be deleted in the v1.0
     */
    ordering: 'ascending' | 'descending';
    wrapper?: string;
    indexHtml?: string;
}
export interface Config extends Argv {
    paths: Record<string, any>;
    hashRouter: boolean;
    plugins: Plugin[];
    mdPlugins: any[];
    hastPlugins: any[];
    themeConfig: ThemeConfig;
    htmlContext: HtmlContext;
    menu: Menu[];
    modifyBundlerConfig<C>(config: C, dev: boolean, args: Config): C;
    modifyBabelRc(babelrc: BabelRC, args: Config): BabelRC;
}
export declare const args: (env: Env) => (yargs: any) => void;
